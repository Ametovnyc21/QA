{
	"info": {
		"_postman_id": "c1f20b21-15d5-472e-aebb-e091dfae01f6",
		"name": "#2HW_Postman_Ametov",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login_Set_token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = pm.response.json();\r",
							"//pm.environment.set(\"token\", jsonData.token);\r",
							"\r",
							"var resp_JSON = pm.response.json();\r",
							"pm.environment.set(\"token\", resp_JSON.token);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Ametov",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Vadimks",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}login",
					"host": [
						"{{url}}login"
					],
					"query": [
						{
							"key": "login",
							"value": "Ametov",
							"disabled": true
						},
						{
							"key": "password",
							"value": "VadimK",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "first DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"#1Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"#2Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3 DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_3\r",
							"// 1. Отправить запрос.+\r",
							"// 2. Статус код 200+\r",
							"// 3. Спарсить response body в json.+\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"// 7. Спарсить request.+\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"// #7 Спарсить request.\r",
							"var req = request.data;\r",
							"\r",
							"var resp_data = pm.response.json();\r",
							"\r",
							"//#2 Статус код 200\r",
							"pm.test(\"# 2Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log (\"---11---\", resp_data.family);\r",
							"\r",
							"// #4 Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"#4 Your test Name User_info_3\", function () {\r",
							"    pm.expect(pm.response.json().name).to.eql(\"Ametov\");\r",
							"});\r",
							"console.log(\"---1---\",pm.response.json().name)\r",
							"\r",
							"// #5 Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"#5 Your test Age User_info_3\", function () {\r",
							"    pm.expect(pm.response.json().age).to.eql(\"36\");\r",
							"});\r",
							"\r",
							"//console.log(\"---1---\",pm.response.json().age)\r",
							"\r",
							"// #6 Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"#6 Your test Age User_info_3\", function () {\r",
							"    pm.expect(pm.response.json().salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"// #7 Спарсить request.\r",
							"var req = request.data;\r",
							"// Спарсить response.\r",
							"var resp_data = pm.response.json();\r",
							"\r",
							"\r",
							"//#8 Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"#8 Your test Name User_info_3\", function () {\r",
							"    pm.expect(resp_data.name).to.eql(req.name);\r",
							"    });\r",
							"\r",
							"//console.log(\"---2---\",pm.response.json().name)\r",
							"\r",
							"//#9 Проверить, что age в ответе равно age s request (age забрать из request.\r",
							"pm.test(\"#9 Your test Age User_info_3\", function () {\r",
							"    pm.expect(resp_data.age).to.eql(req.age);\r",
							"    });\r",
							"\r",
							"//#10 Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"#10 Your test Salary User_info_3\", function () {\r",
							"    pm.expect(resp_data.salary).to.eql(+req.salary);\r",
							"    });\r",
							"\r",
							"console.log(\"--10--\",req.salary)\r",
							"\r",
							"\r",
							"// #11 Вывести в консоль параметр family из response.\r",
							"console.log(\"--11--\",resp_data.family)\r",
							"\r",
							"//#12 Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"#12 u_salary_1_5_year=salary*4 User_info_3\", function () {\r",
							"    pm.expect(resp_data.family.u_salary_1_5_year).to.eql(req.salary*4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "36",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Ametov",
							"type": "text"
						},
						{
							"key": "token",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "gdfgdf",
							"disabled": true
						},
						{
							"key": "age",
							"value": "55",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "552",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3 DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3\r",
							"// 1. Отправить запрос.+\r",
							"// 2. Статус код 200+\r",
							"// 3. Спарсить response body в json.+\r",
							"// 4. Спарсить request.+\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)+\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)+\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)+\r",
							"// 8. Вывести в консоль параметр family из response.+\r",
							"// 9. Проверить, что у параметра dog есть параметры name.+\r",
							"// 10. Проверить, что у параметра dog есть параметры age.+\r",
							"// 11. Проверить, что параметр name имеет значение Luky.+\r",
							"// 12. Проверить, что параметр age имеет значение 4.+\r",
							"\r",
							"// #3. Спарсить response body в json.\r",
							"var resp_data = pm.response.json();\r",
							"\r",
							"// #4 Спарсить request.\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"\r",
							"// #2. Статус код 200\r",
							"pm.test(\"#2 Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// #5 Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"#5 Your test Name Object_info_3\", function () {\r",
							"    pm.expect(resp_data.name).to.eql(req.name);\r",
							"});\r",
							"console.log (\"---585---\",req.name)\r",
							"// #6 Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"#6 Your test Age object_info_3\", function () {\r",
							"    pm.expect(resp_data.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"// #7  Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"#7 Your test Salary object_info_3\", function () {\r",
							"     pm.expect(resp_data.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"//#8 Вывести в консоль параметр family из response.\r",
							"//console.log(\"#8 Family, resp_data.family\");\r",
							"\r",
							"//#9 Проверить, что у параметра dog есть параметры name.\r",
							"console.log(resp_data.family.pets.dog)\r",
							"pm.test(\"#9 Dog has the param name object_info_3\", function () {\r",
							"    pm.expect(resp_data.family.pets.dog).to.has.property(\"name\");\r",
							"});\r",
							"console.log(resp_data.family.pets.dog.name)\r",
							"\r",
							"//10#  #Проверить, что у параметра dog есть параметры age. \r",
							"console.log(resp_data.family.pets.dog)\r",
							"pm.test(\"#10 Dog has the param Age object_info_3\", function () {\r",
							"    pm.expect(resp_data.family.pets.dog).to.has.property(\"age\");\r",
							"});\r",
							"console.log(resp_data.family.pets.dog.age)\r",
							"\r",
							"//#11 Проверить, что параметр name имеет значение Luky\r",
							"console.log(\"--11--\",resp_data.family.pets.dog.name)\r",
							"pm.test(\"#11 The Name param has the meaning Luky object_info_3\", function () {\r",
							"    pm.expect(resp_data.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							" console.log(\"--#11--2-\",resp_data.family.pets.dog.name)\r",
							"\r",
							" //#12 Проверить, что параметр age имеет значение 4.\r",
							" console.log(\"--12--\",resp_data.family.pets.dog.age)\r",
							"pm.test(\"#12 The Age param has the meaning 4 object_info_3\", function () {\r",
							"    \r",
							"    pm.expect(resp_data.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							" \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_3?name=Ametov&age=36&salary=1000",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Ametov"
						},
						{
							"key": "age",
							"value": "36"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4 DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_4\r",
							"// 1. Отправить запрос.+\r",
							"// 2. Статус код 200+\r",
							"// 3. Спарсить response body в json.+\r",
							"// 4. Спарсить request.+\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)+\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)+\r",
							"// 7. Вывести в консоль параметр salary из request.+\r",
							"// 8. Вывести в консоль параметр salary из response.+\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"// 18. Передать в окружение переменную name\r",
							"// 19. Передать в окружение переменную age\r",
							"// 20. Передать в окружение переменную salary\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"//#2 Статус код 200\r",
							"pm.test(\"#2Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//#3 Спарсить response body в json.\r",
							"var resp_data = pm.response.json();\r",
							"//#4 Спарсить request.\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"\r",
							"//#5  Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"#5Your test Name_get_object_info_4\", function () {\r",
							"    pm.expect(resp_data.name).to.eql(req.name);\r",
							"});\r",
							"console.log(\"--5--\",req.data)\r",
							"\r",
							"// //#6 Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"#6Your test Age_get_object_info_4\", function () {\r",
							"    pm.expect(resp_data.age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"console.log(\"--6--\",req.age)\r",
							"\r",
							"// #7 Вывести в консоль параметр salary из request.\r",
							"console.log(\"--7--\",req.salary);\r",
							"\r",
							"// //#8  Вывести в консоль параметр salary из response.\r",
							"console.log(\"--8--\",resp_data.salary);\r",
							"\r",
							"// //#9 Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"--9--\",resp_data.salary[0]);\r",
							"\r",
							"//#10 Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"--10--\",resp_data.salary[1]);\r",
							"\r",
							"//#11 Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"--11--\",resp_data.salary[2]);\r",
							"\r",
							"\r",
							"\r",
							"//#12  Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"#12Your test Salary_get_object_info_4.[0]\", function () {\r",
							"    pm.expect(resp_data.salary[0]).to.eql(+req.salary);\r",
							"});\r",
							"//console.log(\"--12--\",req.salary)\r",
							"\r",
							"//#13 Проверить, что 1-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"#13Your test Salary_get_object_info_4.[1]\", function () {\r",
							"    pm.expect(+resp_data.salary[1]).to.eql(req.salary*2);\r",
							"});\r",
							"\r",
							"//#14 Проверить, что 2-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"#14Your test Salary_get_object_info_4.[2]\", function () {\r",
							"    pm.expect(+resp_data.salary[2]).to.eql(+req.salary*3);\r",
							"});\r",
							"//console.log(\"--14--\",req.salary*3)\r",
							"\r",
							"//#15 Создать в окружении переменную name\r",
							"var resp_data = pm.response.json();\r",
							"pm.environment.set(\"name\", resp_data.name);\r",
							"\r",
							"// 16 Создать в окружении переменную age\r",
							"var resp_data = pm.response.json();\r",
							"pm.environment.set(\"age\", resp_data.age);\r",
							"\r",
							"// 17 Создать в окружении переменную salary\r",
							"var resp_data = pm.response.json();\r",
							"pm.environment.set(\"salary\", req.salary);\r",
							"console.log(\"---salary17-19---\",req.salary)\r",
							"// 18 Передать в окружение переменную name\r",
							"// 19 Передать в окружение переменную age\r",
							"// 20 Передать в окружение переменную salary\r",
							"// 21 Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"if( 3>1 ) {\r",
							"    console.log(resp_data.salary);\r",
							"    }\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2 DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"#5 Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"var resp_data = pm.response.json();\r",
							"\r",
							"// 7. Спарсить request.\r",
							"var req_data = request.data;\r",
							"console.log (\"--8--\", resp_data.person.u_name)\r",
							"\r",
							"// #8  Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"#8 json response = start_qa_salary\", function () {\r",
							"    pm.expect(resp_data.start_qa_salary).to.eql(+req_data.salary);\r",
							"});\r",
							"// console.log(\"---start qa----\",req_data)\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"#9 json response = qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_data.qa_salary_after_6_months).to.eql(req_data.salary*2);\r",
							"});\r",
							"console.log(\"---9----\",resp_data.qa_salary_after_6_months)\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"#10 json response = qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_data.qa_salary_after_12_months).to.eql(req_data.salary*2.7);\r",
							"});\r",
							"\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"#11 json response = qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(+resp_data[\"qa_salary_after_1.5_year\"]).to.eql(+req_data.salary*3.3);\r",
							"});\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"#12 json response = qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp_data[\"qa_salary_after_3.5_years\"]).to.eql(+req_data.salary*3.8);\r",
							"});\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"#13 has the qa_salary param person \", function () {\r",
							"    pm.expect(resp_data).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"#14 start_qa_salary = salary \", function () {\r",
							"    pm.expect(+resp_data[\"start_qa_salary\"]).to.eql(+req_data.salary);\r",
							"});\r",
							"// console.log(\"--15--\",qa_salary_after_6_months)\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"#15 qa_salary_after_6_months = salary*2 \", function () {\r",
							"    pm.expect(resp_data[\"qa_salary_after_6_months\"]).to.eql(+req_data.salary*2);\r",
							"});\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"#16 qa_salary_after_12_months = salary*2.7 \", function () {\r",
							"    pm.expect(+resp_data[\"qa_salary_after_12_months\"]).to.eql(+req_data.salary*2.7);\r",
							"});\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"#18 qa_salary_after_3.5_years = salary*3.8 \", function () {\r",
							"    pm.expect(resp_data[\"qa_salary_after_3.5_years\"]).to.eql(req_data.salary*3.8);\r",
							"});\r",
							"\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"#19 json response has person param \", function () {\r",
							"    pm.expect(+resp_data.person.u_name[1]).to.eql(+req_data.salary);\r",
							"});\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"#20 u_age = age из request \", function () {\r",
							"    pm.expect(+resp_data.person.u_age).to.eql(+req_data.age);\r",
							"});\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"#21 u_salary_5_years = salary*4.2 \", function () {\r",
							"    pm.expect(resp_data.person[\"u_salary_5_years\"]).to.eql(req_data.salary*4.2);                                                                                                                      \r",
							"});\r",
							"\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"if( 3>1 ) {\r",
							"    console.log(resp_data.person);\r",
							"    }\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	]
}